{
  "swagger": "2.0",
  "info": {
    "title": "Contacts & Users API",
    "description": "API for managing contacts, users and authentication",
    "version": "1.0.0"
  },
  "host": "cse341-project1-k82o.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "Register"
    },
    {
      "name": "Auth",
      "description": "Login"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "Contacts",
      "description": "Contact management endpoints"
    },
    {
      "name": "Tasks",
      "description": "Task management endpoints"
    },
    {
      "name": "Products",
      "description": "Product management endpoints"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Hello World"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/github": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/google/failure": {
      "get": {
        "description": "",
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create a new user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "secret123"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user details",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Jane"
                },
                "lastName": {
                  "type": "string",
                  "example": "Smith"
                },
                "email": {
                  "type": "string",
                  "example": "jane@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "newpassword123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/contacts/": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "description": "Create a new contact",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Contact data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "favoriteColor": {
                  "type": "string",
                  "example": "blue"
                },
                "birthday": {
                  "type": "string",
                  "example": "1990-01-01"
                },
                "phone": {
                  "type": "string",
                  "example": "123-456-7890"
                },
                "address": {
                  "type": "string",
                  "example": "123 Main St"
                },
                "city": {
                  "type": "string",
                  "example": "Anytown"
                },
                "state": {
                  "type": "string",
                  "example": "CA"
                },
                "country": {
                  "type": "string",
                  "example": "USA"
                },
                "notes": {
                  "type": "string",
                  "example": "Some notes about the contact"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "email",
                "favoriteColor",
                "birthday",
                "phone",
                "address",
                "city",
                "state",
                "country",
                "notes"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Contact created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "description": "Update an existing contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Contact ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated contact data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "favoriteColor": {
                  "type": "string",
                  "example": "blue"
                },
                "birthday": {
                  "type": "string",
                  "example": "1990-01-01"
                },
                "phone": {
                  "type": "string",
                  "example": "123-456-7890"
                },
                "address": {
                  "type": "string",
                  "example": "123 Main St"
                },
                "city": {
                  "type": "string",
                  "example": "Anytown"
                },
                "state": {
                  "type": "string",
                  "example": "CA"
                },
                "country": {
                  "type": "string",
                  "example": "USA"
                },
                "notes": {
                  "type": "string",
                  "example": "Some notes about the contact"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "description": "Delete a contact by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Contact ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Contact deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    },
    "/tasks/": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "description": "Create a new task",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Task data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Write Swagger documentation"
                },
                "description": {
                  "type": "string",
                  "example": "Add all task endpoints to swagger.json for testing"
                },
                "status": {
                  "type": "string",
                  "example": "pending"
                },
                "priority": {
                  "type": "string",
                  "example": "high"
                },
                "dueDate": {
                  "type": "string",
                  "example": "2025-10-01T00:00:00.000Z"
                }
              },
              "required": [
                "title"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "Get a single task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task found"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "description": "Update an existing task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Task ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated task data",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Write updated Swagger documentation"
                },
                "description": {
                  "type": "string",
                  "example": "Refine task details and test again"
                },
                "status": {
                  "type": "string",
                  "example": "in-progress"
                },
                "priority": {
                  "type": "string",
                  "example": "medium"
                },
                "dueDate": {
                  "type": "string",
                  "example": "2025-11-15T00:00:00.000Z"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "description": "Delete a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Task ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get a list of all products",
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "60d21b4667d0d8992e610c85"
                  },
                  "name": {
                    "type": "string",
                    "example": "Sample Product"
                  },
                  "price": {
                    "type": "number",
                    "example": 100
                  },
                  "description": {
                    "type": "string",
                    "example": "A test product"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-09-22T10:00:00.000Z"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Create a new product",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Laptop"
                },
                "price": {
                  "type": "number",
                  "example": 1500
                },
                "description": {
                  "type": "string",
                  "example": "High performance laptop with 16GB RAM and SSD storage"
                },
                "sku": {
                  "type": "string",
                  "example": "LAP-1500"
                },
                "quantity": {
                  "type": "number",
                  "example": 25
                },
                "inStock": {
                  "type": "boolean",
                  "example": true
                },
                "category": {
                  "type": "string",
                  "example": "Electronics"
                }
              },
              "required": [
                "name",
                "price",
                "sku",
                "quantity",
                "inStock"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get a single product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Update an existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated product data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Gaming Laptop"
                },
                "price": {
                  "type": "number",
                  "example": 2000
                },
                "description": {
                  "type": "string",
                  "example": "Updated description with better GPU"
                },
                "sku": {
                  "type": "string",
                  "example": "LAP-2000"
                },
                "quantity": {
                  "type": "number",
                  "example": 15
                },
                "inStock": {
                  "type": "boolean",
                  "example": true
                },
                "category": {
                  "type": "string",
                  "example": "Electronics"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Delete a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  }
}